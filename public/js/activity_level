function calcBMR(age, weight, height, sex) {
    const weightToKilo = weight / 2.2;
    const heightToCentimeter = height * 2.54

    let base = 10 * weightToKilo + 6.25 * heightToCentimeter - 5 * age;
    if (sex == 'male') {
        base += 5;
    } else if (sex == 'female') {
        base -= 161;
    }

    return base
}
function goals(weightGoal, goalLBS, bmr, activity_level) {
    let calories = bmr * activity_level;
    if (weightGoal === 'weightMaintain') {
        return `Calories for weight mainanence - ${calories.toFixed(0)} Calories`;
    }
    if (weightGoal === 'weightLoss') {
        calories = calories - (goalLBS * 500);
        return `Calories for weight loss - ${calories.toFixed(0)} Calories`;
    }
    if (weightGoal === 'weightGain') {
        calories = calories + (goalLBS * 500);
        return `Calories for weight gain - ${calories.toFixed(0)} Calories`;
    }
}
function activity_level(event) {
    event.preventDefault(); // Prevent the default form submission

    // Get form data
    const formData = {
        age: document.getElementById("age").value,
        weight: document.getElementById("weight").value,
        sex: document.getElementById("gender").value,
        height: document.getElementById("height").value,
        resting: parseFloat(document.getElementById("Resting").value),
        veryLightActivity: parseFloat(document.getElementById("VeryLightActivity").value),
        lightActivity: parseFloat(document.getElementById("LightActivity").value),
        moderateActivity: parseFloat(document.getElementById("ModerateActivity").value),
        heavyActivity: parseFloat(document.getElementById("HeavyActivity").value),
        weightGoal: document.getElementById("weightGoal").value,
        goalLBS: parseFloat(document.getElementById("goalLBS").value)
    }

    const checkHours = formData.resting + formData.veryLightActivity + formData.lightActivity + formData.moderateActivity + formData.heavyActivity;

    if (checkHours !== 24) {
        // Create an error message element
        const errorMessage = document.createElement("p");
        errorMessage.textContent = "Error: The total hours should be equal to 24. Please adjust your input.";
        errorMessage.style.color = "red";  // Set the text color to red, for example

        // Insert the error message next to the calculate button
        const calculateButton = document.querySelector("#calculate_calories_form [type='submit']");
        calculateButton.parentNode.insertBefore(errorMessage, calculateButton.nextSibling);

        // Optionally, you can also remove the error message after a certain duration or when the user interacts with the form again
        setTimeout(() => {
            errorMessage.remove();
        }, 5000);  // Remove the error message after 5 seconds (adjust the duration as needed)
        return;
    } else {
        // Continue with the rest of your calculations
        const activityFactor = checkHours / 24;
        // Add more calculations or actions here
    }

    // VALUES TO DISPLAY
    const activityFactor = (formData.resting * 1 + formData.veryLightActivity * 1.2 + formData.lightActivity * 2.5 + formData.moderateActivity * 5 + formData.heavyActivity * 7) / 24
    const base = calcBMR(formData.age, formData.weight, formData.height, formData.sex);
    const goalCals = goals(formData.weightGoal, formData.goalLBS, formData.base, formData.activityFactor);

    // DISPLAY
    const calc = document.getElementById('calc-list');
    calc.innerHTML = "";
    const aF = document.createElement("li");
    aF.textContent = `Activity Factor- ${activityFactor.toFixed(2)} `
    calc.appendChild(aF);

    const bmr = document.createElement("li");
    const bmrLog = document.getElementById('bmr-list');
    bmrLog.innerHTML = "";
    bmr.textContent = `Basal Metabolic Rate- ${base.toFixed(0)} Calories`
    bmrLog.appendChild(bmr)

    const gw = document.createElement("li");
    const gwLog = document.getElementById('goal-list');
    gwLog.innerHTML = "";
    gw.textContent = `${goalCals}`;
    gwLog.appendChild(gw);
}

const resultsTemplate = Handlebars.compile(document.getElementById('resultsTemplate').innerHTML);

function calculateCalories() {
    // Collect form data
    const formData = {
        weight: document.getElementById('weight').value,
        height: document.getElementById('height').value,
        // Add other form fields as needed
    };

    // Send the form data to the server using AJAX
    fetch('/index', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData),
    })
        .then(response => response.json())
        .then(data => {
            // Use Handlebars to render the calculated results
            const resultsSection = document.getElementById('results');
            resultsSection.innerHTML = resultsTemplate({ calories: data.calories });
        })
        .catch(error => {
            console.error('Error:', error);
            // Handle errors if needed
        });
}